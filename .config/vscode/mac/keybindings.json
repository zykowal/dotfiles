[
  {
    "key": "cmd+o",
    "command": "projectManager.listProjects"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "ctrl+n",
    "when": "editorTextFocus"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+a",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "filesExplorer.copy",
    "key": "y",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "filesExplorer.paste",
    "key": "p",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "deleteFile",
    "key": "d",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "-workbench.action.files.save",
    "key": "ctrl+s"
  },
  {
    "command": "saveAll",
    "key": "ctrl+s"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+j",
    "command": "quickInput.next",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "key": "ctrl+j",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+k",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+k",
    "command": "search.action.focusSearchFromResults",
    "when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+k",
    "command": "quickInput.previous",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "key": "ctrl+i",
    "command": "editor.action.triggerSuggest",
    "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+p",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus && vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+n",
    "command": "notifications.clearAll",
    "when": "vim.mode == 'Insert'"
  },
  {
    "key": "shift+k",
    "command": "editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+u",
    "command": "editor.action.pageUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+d",
    "command": "editor.action.pageDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "k",
    "command": "editor.action.scrollUpHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "j",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "l",
    "command": "editor.action.scrollRightHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "h",
    "command": "editor.action.scrollLeftHover",
    "when": "editorHoverFocused"
  },
  {
    "key": "ctrl+h",
    "command": "extension.vim_ctrl+h",
    "when": "vim.mode == 'Normal'"
  },
  {
    "key": "ctrl+d",
    "command": "notebook.cell.cursorPageDown",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "ctrl+d",
    "command": "list.focusPageDown",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+d",
    "command": "quickInput.pageNext",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "key": "ctrl+d",
    "command": "selectNextPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+d",
    "command": "workbench.action.interactivePlayground.pageDown",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+u",
    "command": "notebook.cell.cursorPageUp",
    "when": "editorTextFocus && inputFocus && notebookEditorFocused"
  },
  {
    "key": "ctrl+u",
    "command": "list.focusPageUp",
    "when": "listFocus && !inputFocus && !treestickyScrollFocused"
  },
  {
    "key": "ctrl+u",
    "command": "quickInput.pagePrevious",
    "when": "inQuickInput && quickInputType == 'quickPick'"
  },
  {
    "key": "ctrl+u",
    "command": "selectPrevPageSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
  },
  {
    "key": "ctrl+u",
    "command": "workbench.action.interactivePlayground.pageUp",
    "when": "interactivePlaygroundFocus && !editorTextFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.terminal.focusPreviousPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+i",
    "command": "workbench.action.toggleMaximizedPanel",
    "when": "terminalFocus"
  },
  {
    "key": "Escape",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus || panelFocus"
  },
  {
    "key": "ctrl+j",
    "command": "widgetNavigation.focusNext",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
  },
  {
    "key": "ctrl+k",
    "command": "widgetNavigation.focusPrevious",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'"
  },
  {
    "key": "o",
    "command": "revealReference",
    "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
  },
  {
    "key": "ctrl+j",
    "command": "showNextParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+k",
    "command": "showPrevParameterHint",
    "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
  },
  {
    "key": "ctrl+w",
    "command": "expand_region",
    "when": "editorTextFocus && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+;",
    "command": "undo_expand_region",
    "when": "editorTextFocus && editorHasSelection && vim.mode != 'Insert'"
  },
  {
    "key": "ctrl+w",
    "command": "-expand_region",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+w",
    "command": "-undo_expand_region",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "alt+b",
    "command": "-extension.toggleBool",
    "when": "editorTextFocus"
  }
]
